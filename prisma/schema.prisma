// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model employees {
  id          Int      @id @default(autoincrement())
  username    String   @unique
  password    String
  name        String
  surname     String
  email       String?
  img         String?
  status      String   @default("ON")
  position_id Int
  login_fail  Int
  created_by  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  birthday    DateTime
  id_google   String?  @unique

  stocks         stock[]
  categoryStocks categorystock[]
  suppliers      supplier[]
  menu           menu[]
}

model categorystock {
  id           Int      @id @default(autoincrement())
  categoryName String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  createdById Int
  creator     employees @relation(fields: [createdById], references: [id])

  stocks stock[]
  menu   menu[]

  @@map("categorystock")
}

model supplier {
  id           Int      @id @default(autoincrement())
  supplierName String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  createdById Int
  creator     employees @relation(fields: [createdById], references: [id])

  stocks stock[]
}

model stock {
  id          Int      @id @default(autoincrement())
  productName String   @unique
  quantity    Int
  price       Float
  max         Float    @default(0)
  min         Float    @default(0)
  unit        String
  description String?
  img         String?
  status      String   @default("ON_STOCK")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  createdById   Int
  creator       employees       @relation(fields: [createdById], references: [id])
  categoryId    Int
  category      categorystock   @relation(fields: [categoryId], references: [id])
  supplierId    Int
  supplier      supplier        @relation(fields: [supplierId], references: [id])
  formularstock formularstock[]
}

model menu {
  id          Int      @id @default(autoincrement())
  menuName    String   @unique
  price_sale  Float
  price_cost  Float
  unit        String
  img         String?
  description String?
  status      String   @default("OFF_SALE") //@default("ON_SALE") for SALE menu
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  createdById    Int
  creator        employees       @relation(fields: [createdById], references: [id])
  categoryMenuId Int
  category       categorystock   @relation(fields: [categoryMenuId], references: [id])
  formularstock  formularstock[]
}

model formularstock {
  id         Int      @id @default(autoincrement())
  pcs_update Int
  status     String   @default("RUN_FORMULAR")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  menuId  Int
  menu    menu  @relation(fields: [menuId], references: [id])
  stockId Int
  stock   stock @relation(fields: [stockId], references: [id])
}
